name: Build
run-name: Build
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Set up Python 3.8
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build
        run: |
          python -m build
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
#      - uses: actions/setup-python@v2
#        with:
#        python-version: 3.8
#        name: Install dependencies
#      - run: python -m pip install --upgrade pip && pip install -r requirements.txt
#        name: Test with pytest
#      - name: Build
#      - run: python -m pip install --upgrade pip && pip install -r requirements.txt && python setup.py sdist bdist_wheel
#      - name: Publish to TestPyPI
#      - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
#      - uses: pypa/gh-action-pypi-publish@master
#      - with:
#        user: ${{ secrets.PYPI_USERNAME }}
#        password: ${{ secrets.PYPI_PASSWORD }}
#        repository_url: https://test.pypi.org/legacy/
#        verbose: true
#      - name: Publish to PyPI
#      - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
#      - uses: pypa/gh-action-pypi-publish@master
#      - with:
#        user: ${{ secrets.PYPI_USERNAME }}
#        password: ${{ secrets.PYPI_PASSWORD }}
#        verbose: true
#      - name: Upload to S3
#      - uses: jakejarvis/s3-sync-action@master
#      - with:
#        args: --acl public-read
#        delete: true
#        folder: dist
#        from: .
#        to: s3://${{ inputs.bucket }}/${{ inputs.folder }}
#        region: $AWS_REGION
#        profile: $AWS_PROFILE
#      - name: Invalidate CloudFront distribution
#      - uses: aws-actions/aws-cloudfront-invalidate-cache@v1
#      - with:
#        distribution-id: ${{ inputs.distribution-id }}
#        paths: '/*'
#        region: $AWS_REGION
#        profile: $AWS_PROFILE