---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    selector:
        matchLabels:
            app: {{ .Release.Name }}
    template:
        metadata:
            labels:
                app: {{ .Release.Name }}
        spec:
            containers:
                - name: {{ .Release.Name }}
                  image: {{ .Values.image }}
                  ports:
                      - containerPort: 8080
                  env:
                      - name: PORT
                        value: "8080"
                  livenessProbe:
                      httpGet:
                          path: /hello/
                          port: 8080
                      initialDelaySeconds: 10
                      periodSeconds: 10
                      timeoutSeconds: 5
                      successThreshold: 1
                      failureThreshold: 3
                  readinessProbe:
                      httpGet:
                          path: /hello/
                          port: 8080
                      initialDelaySeconds: 10
                      periodSeconds: 10
                      timeoutSeconds: 5
                      successThreshold: 1
                      failureThreshold: 3
                  resources:
                      requests:
                          cpu: 100m
                          memory: 128Mi
                      limits:
                          cpu: 100m
                          memory: 128Mi
                  imagePullPolicy: Always
                  command: ["/bin/sh", "-c", "python -m http.server 8080"]
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}
spec:
    scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: {{ .Release.Name }}
    minReplicas: 1
    maxReplicas: 10
    metrics:
        - type: Resource
          resource:
              name: cpu
              target:
                  type: Utilization
                  averageUtilization: 50